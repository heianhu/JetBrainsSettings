<application>
  <component name="AppStorage">
    <histories>
      <item value="Do not return anything, modify matrix in-place instead." />
      <item value="You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation." />
      <item value="clockwise" />
      <item value="repetition" />
      <item value="rank" />
      <item value="列" />
      <item value="行列" />
      <item value="Only the filled cells need to be validated according to the mentioned rules." />
      <item value="A Sudoku board (partially filled) could be valid but is not necessarily solvable." />
      <item value="Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid." />
      <item value="Each column must contain the digits 1-9 without repetition." />
      <item value="Each row must contain the digits 1-9 without repetition." />
      <item value="Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:" />
      <item value="You may assume that each input would have exactly one solution, and you may not use the same element twice." />
      <item value="Given an array of integers, return indices of the two numbers such that they add up to a specific target." />
      <item value="You must do this in-place without making a copy of the array. Minimize the total number of operations." />
      <item value="Minimize the total number of operations." />
      <item value="You must do this in-place without making a copy of the array." />
      <item value="Do not return anything, modify nums in-place instead." />
      <item value="You may assume the integer does not contain any leading zero, except the number 0 itself." />
      <item value="The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit." />
      <item value="Given a non-empty array of digits representing a non-negative integer, plus one to the integer." />
      <item value="What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?" />
      <item value="What if nums1's size is small compared to nums2's size? Which algorithm is better?" />
      <item value="What if the given array is already sorted? How would you optimize your algorithm?" />
      <item value="Each element in the result should appear as many times as it shows in both arrays. The result can be in any order." />
      <item value="intersection" />
      <item value="every element appears twice except for one. Find that single one." />
      <item value="Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?" />
      <item value="Given a non-empty array of integers, every element appears twice except for one. Find that single one." />
      <item value="Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct." />
      <item value="profit" />
      <item value="Say you have an array for which the ith element is the price of a given stock on day i." />
      <item value="Top Interview Questions" />
      <item value="subscriptable" />
      <item value="'type' object is not subscriptable" />
      <item value="hint" />
      <item value="It doesn't matter what values are set beyond the returned length." />
      <item value="Your function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively." />
      <item value="It doesn't matter what you leave beyond the returned length." />
      <item value="Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively." />
      <item value="with the first two elements of nums being 1 and 2 respectively." />
      <item value="Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory." />
      <item value="Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length." />
      <item value="Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length. Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory." />
      <item value="euler angles" />
      <item value="on closing" />
      <item value="draw face landmarks" />
      <item value="draw face box" />
      <item value="rectangle" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="184" />
        <entry key="ENGLISH" value="179" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="JAPANESE" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="21f11c9eab80f4f2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>