<application>
  <component name="AppStorage">
    <histories>
      <item value="capture" />
      <item value="rotate" />
      <item value="morph" />
      <item value="morph module parameters" />
      <item value="rotate module parameters" />
      <item value="morph module spec" />
      <item value="combine module file name" />
      <item value="rotate module file name" />
      <item value="morph module file name" />
      <item value="rotate module spec" />
      <item value="Batch Input Module Spec" />
      <item value="Batch Input Module" />
      <item value="Batch Input" />
      <item value="Morph Rotate Combine" />
      <item value="Morph Rotate Combine Poser" />
      <item value="Poser" />
      <item value="Pose Parameter" />
      <item value="Morph Rotate Combine Poser 256 Param 6" />
      <item value="tha" />
      <item value="puppet" />
      <item value="poser" />
      <item value="interval" />
      <item value="标记" />
      <item value="parallel" />
      <item value="certificates" />
      <item value="use JitterEntropy library to get good quality random bytes based on CPU timing jitter" />
      <item value="jent entropy init" />
      <item value="With the check below that count_stuck must be less than 10% of the overall generated raw entropy values it is guaranteed that the APT is invoked at floor((TESTLOOPCOUNT * 0.9) / 64) == 14 times." />
      <item value="We could add a check for system capabilities such as clock_getres or check for CONFIG_X86_TSC, but it does not make much sense as the following sanity checks verify that we have a high-resolution timer." />
      <item value="SP800-90B requires at least 1024 initial test cycles." />
      <item value="TESTLOOPCOUNT needs some loops to identify edge systems. 100 is definitely too little." />
      <item value="Moreover, only old systems show potentially problematic jitter entropy that could potentially be caught here. But the RNG is intended for hardware that is available or widely used, but not old systems that are long out of favor. Thus, no statistical tests." />
      <item value="We could perform statistical tests here, but the problem is that we only have a few loop counts to do testing. These loop counts may show some slight skew and we produce false positives." />
      <item value="this significantly increases the cryptographic strength of the encryption keys" />
      <item value="azerion" />
      <item value="ratio" />
      <item value="The background threadpool cannot accept new task for execution, please retry the operation" />
      <item value="The required privileges" />
      <item value="QUERY" />
      <item value="privileges" />
      <item value="Error while compiling statement: FAILED: SemanticException No valid privileges" />
      <item value="together" />
      <item value="gaussian kde" />
      <item value="ravel" />
      <item value="vstack" />
      <item value="mgrid" />
      <item value="Contourf" />
      <item value="Peform" />
      <item value="occupy" />
      <item value="merits" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="128" />
        <entry key="ENGLISH" value="122" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="JAPANESE" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="21f11c9eab80f4f2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>