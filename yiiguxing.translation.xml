<application>
  <component name="AppStorage">
    <histories>
      <item value="Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists." />
      <item value="string inserted between values, default a space." />
      <item value="A linked list can be reversed either iteratively or recursively" />
      <item value="A linked list can be reversed either iteratively or recursively. Could you implement both?" />
      <item value="Given n will always be valid." />
      <item value="Given a linked list, remove the n-th node from the end of list and return its head." />
      <item value="Could you do this in one pass?" />
      <item value="The linked list will have at least two elements." />
      <item value="Solution" />
      <item value="Write a function to delete a node (except the tail) in a singly linked list, given only access to that node." />
      <item value="The linked list will have at least two elements. All of the nodes' values will be unique. The given node will not be the tail and it will always be a valid node of the linked list. Do not return anything from your function." />
      <item value="You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function." />
      <item value="Given linked list -- head = [4,5,1,9], which looks like following:" />
      <item value="Got a packet bigger than 'max_allowed_packet' bytes&quot;" />
      <item value="prefix" />
      <item value="common" />
      <item value="amongst" />
      <item value="Write a function to find the longest common prefix string amongst an array of strings." />
      <item value="All given inputs are in lowercase letters a-z." />
      <item value="Explanation: For n = 3 the term was &quot;21&quot; in which we have two groups &quot;2&quot; and &quot;1&quot;, &quot;2&quot; can be read as &quot;12&quot; which means frequency = 1 and value = 2, the same way &quot;1&quot; is read as &quot;11&quot;, so the answer is the concatenation of &quot;12&quot; and &quot;11&quot; which is &quot;1211&quot;." />
      <item value="Explanation: For n = 3 the term was &quot;21&quot; in which we have two groups &quot;2&quot; and &quot;1&quot;, &quot;2&quot; can be read as &quot;12&quot; which means fre" />
      <item value="Note: Each term of the sequence of integers will be represented as a string." />
      <item value="Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence. You can do so recursively, in other words from the previous member read off the digits, counting the number of digits in groups of the same digit." />
      <item value="The count-and-say sequence is the sequence of integers with the first five terms as following:" />
      <item value="e: Each term of the sequence of integers will be represented as a string." />
      <item value="generate the nth term of the count-and-say sequence. You can do so recursively, in other words from the previous member read off the digits, counting the number of digits in groups of the same digit." />
      <item value="1 is read off as &quot;one 1&quot; or 11." />
      <item value="For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf()." />
      <item value="What should we return when needle is an empty string? This is a great question to ask during an interview." />
      <item value="Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack." />
      <item value="Return True if all characters in S are digits" />
      <item value="Return True if there are only decimal characters in S," />
      <item value="Return True if all characters in S are alphanumeric" />
      <item value="digit or a +/- sign. Therefore no valid conversion could be performed." />
      <item value="The first non-whitespace character is 'w', which is not a numerical" />
      <item value="Conversion stops at digit '3' as the next character is not a numerical digit." />
      <item value="Then take as many numerical digits as possible, which gets 42." />
      <item value="The first non-whitespace character is '-', which is the minus sign." />
      <item value="Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. If the numerical value is out of the range of representable values, INT_MAX (231 − 1) or INT_MIN (−231) is returned." />
      <item value="Only the space character ' ' is considered as whitespace character." />
      <item value="If no valid conversion could be performed, a zero value is returned." />
      <item value="If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed." />
      <item value="The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function." />
      <item value="The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value." />
      <item value="Implement atoi which converts a string to an integer." />
      <item value="For the purpose of this problem, we define empty string as valid palindrome." />
      <item value="Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases." />
      <item value="Note: For the purpose of this problem, we define empty string as valid palindrome." />
      <item value="What if the inputs contain unicode characters? How would you adapt your solution to such case?" />
      <item value="You may assume the string contains only lowercase alphabets." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="259" />
        <entry key="ENGLISH" value="254" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="JAPANESE" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="21f11c9eab80f4f2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>